AWSTemplateFormatVersion: '2010-09-09'
Description: 'This template will create a VPC with two subnets, a route table
and two instances (public and private) with security groups'
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: Eng47-VPC
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Eng47-IG
  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: Eng47-PublicSubnet
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.2.0/24
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: Eng47-PrivateSubnet
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: Eng47-PublicRouteTable
  PublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet
      RouteTableId:
        Ref: PublicRouteTable
  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayAttachment
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: This is the security group for the public app
      VpcId:
        Ref: VPC
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 27017
          ToPort: 27017
          CidrIp: 10.0.2.0/24
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.2.0/24
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 1024
          ToPort: 65535
          CidrIp: 10.0.2.0/24
      Tags:
        - Key: Name
          Value: Eng47-AppSecurityGroup
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: This is the security group for the private DB
      VpcId:
        Ref: VPC
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 1024
          ToPort: 65535
          CidrIp: 10.0.1.0/24
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.1.0/24
        - IpProtocol: tcp
          FromPort: 27017
          ToPort: 27017
          CidrIp: 10.0.1.0/24
      Tags:
        - Key: Name
          Value: Eng47-DBSecurityGroup
  AppInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-08bc77a2c7eb2b1da
      InstanceType: t2.micro
      SecurityGroupIds:
        - !GetAtt AppSecurityGroup.GroupId
      SubnetId:
        Ref: PublicSubnet
      Tags:
        - Key: Name
          Value: Eng47-AppInstance
  DBInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-08bc77a2c7eb2b1da
      InstanceType: t2.micro
      SecurityGroupIds:
        - !GetAtt DBSecurityGroup.GroupId
      SubnetId:
        Ref: PrivateSubnet
      Tags:
        - Key: Name
          Value: Eng47-DBInstance
